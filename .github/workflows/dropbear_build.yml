name: Build Dropbear with Buildroot (Multi-Arch)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ "x86_64", "aarch64", "armv7", "riscv64" ]  # 目标架构
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget cpio unzip rsync bc libssl-dev

      - name: Download Buildroot
        run: |
          wget https://buildroot.org/downloads/buildroot-2024.02.tar.gz
          tar xzf buildroot-2024.02.tar.gz
          mv buildroot-2024.02 buildroot-${{ matrix.arch }}

      - name: Configure Buildroot for Dropbear
        run: |
          cd buildroot-${{ matrix.arch }}
          make defconfig
          echo 'BR2_PACKAGE_DROPBEAR=y' >> .config
          echo 'BR2_PACKAGE_DROPBEAR_CLIENT=y' >> .config
          case "${{ matrix.arch }}" in
            "x86_64")
              echo 'BR2_x86_64=y' >> .config
              ;;
            "aarch64")
              echo 'BR2_aarch64=y' >> .config
              ;;
            "armv7")
              echo 'BR2_arm=y' >> .config
              echo 'BR2_ARM_EABIHF=y' >> .config
              echo 'BR2_ARM_INSTRUCTIONSET=arm' >> .config
              ;;
            "riscv64")
              echo 'BR2_riscv=y' >> .config
              echo 'BR2_RISCV_64=y' >> .config
              ;;
          esac
          make olddefconfig

      - name: Build Dropbear
        run: |
          cd buildroot-${{ matrix.arch }}
          make -j$(nproc)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dropbear-${{ matrix.arch }}
          path: |
            buildroot-${{ matrix.arch }}/output/target/usr/sbin/dropbear
            buildroot-${{ matrix.arch }}/output/target/usr/bin/dbclient
